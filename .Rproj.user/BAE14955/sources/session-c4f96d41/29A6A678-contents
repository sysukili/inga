---
title: Thesis
subtitle: 这仅仅是我的本科毕业论文的一个精简版与代码集,详细全文见[thesis](www.sysukili.site/causal)
  .
vignette: >
  %\VignetteIndexEntry{quarto vignettes}
  %\VignetteEncoding{UTF-8}
  %\VignetteEngine{quarto::html}
knitr:
  opts_chunk: 
    collapse: true
    comment: '#>'
editor_options: 
  chunk_output_type: console
---


```{r}
#| output: false
library(inga)
library(tidyverse)
library("survival")
library("survminer")
library(ggplot2)
library(showtext)


data(nhefs)
data(nhefs1)

# 启用 showtext 并加载中文字体
showtext_auto()
font_add("SimHei", "simhei.ttf") # 替换为系统中的中文字体路径
```

# 简介

我的论文开始于一个经典的因果问题:为延长寿命,吸烟者应该停止吸烟吗?

为解决这个问题

一般来说,因果推断问题中我们都是在估计treatment对outcome的treatment effect,只不过在生存分析领域,outcome是实验开始到事件发生的时间长度,举例来说,我们对停止吸烟于寿命的因果效应感兴趣(当然,已经有数不清的实验数据表明两者有强相关性,但正如Fisher那个经典的质疑,可能存在某种遗传或环境因素，既导致人们更容易吸烟，又增加了患肺癌的风险).

当然,虽然名为生存分析,事件并不局限于死亡,其实"failure time analysis"这个名字我以为更恰当些,我们关注的是实验开始到发生事件的时间,事件可以是婚姻,癌症,感染甚至找到工作的时间.

以NHEFS数据集举例,该实验跟踪了1629个体,1983.1-199,比普通因果推断问题更麻烦的是the observed outcome T是有可能删失的,在这里我们要分析的每个观察个体in math 可以描述为:

$$ 
O_i = (Z_i, T_i, X_i, \delta_i)\\
Z_i \in \text{treatment assignment}\\
T_i \in \text{failure time}\\
X_i \in \text{covariates}\\
\delta_i \in \text{censoring indicator}
$$

简化起见,先分析时间固定的treatment,vary的情况日后再说.且暂时先不考虑confounder导致的selection bias与censor bias.



如[@fig-1]所示,我们可以看到6个病人的实验开始时间和结束时间,其中有3个病人发生了事件,另外3个右删失了,由于右删失的存在,我们无法计算$\hat{E(Y)}$,故选用其他一些estimand来量化treatment effect,比如HR,生存曲线,RMST(受限平均生存时间),yyl


或者说使用log-rank test 来比较两个样本的生存分布


take a look:

```{r}
set.seed(222)
sampled_data <- sample_n(nhefs1, 10)

# 查看抽取的结果
sampled_data
```


|  变量名  |                 解释                 |
|:--------:|:------------------------------------:|
|  death   |    是否右删失(1:死亡,0:删失)    |
|   time   | 存活时间,NA:Administrative censoring |
|   qsmk   |   处理变量,是否停止吸烟(1:是,0:否)   |
|   age    |                 年龄                 |
| smokeyrs |                 烟龄                 |

: NHEFS[^1]

[^1]: 一项持续数十年的跟踪实验,[数据来源](https://miguelhernan.org/whatifbook)




```{r}
#| label: fig-1

# 示例数据
data <- data.frame(
  Patient = factor(c("继续吸烟 1", "继续吸烟 2", "继续吸烟 3", "继续吸烟 4", "停止吸烟 1", "停止吸烟 2"),
    levels = rev(c("继续吸烟 1", "继续吸烟 2", "继续吸烟 3", "继续吸烟 4", "停止吸烟 1", "停止吸烟 2"))
  ),
  Entry = as.Date(rep("1983-01-01", 6)), # 所有病人从1983年1月开始
  Exit = as.Date(c("1992-12-31", "1992-12-31", "1991-12-31", "1987-07-10", "1992-12-31", "1990-07-10")), # 在1992-12-31前结束
  Event = c(0, 0, 1, 1, 0, 1)
)

accrual_start <- as.Date("1983-01-01")
accrual_end <- as.Date("1992-12-31")
followup_end <- as.Date("1992-12-31")

# 绘图
ggplot(data, aes(y = Patient)) +
  geom_segment(aes(x = Entry, xend = Exit, y = Patient, yend = Patient), color = "black") +
  geom_point(aes(x = Entry, y = Patient), shape = 16, size = 3) +
  geom_point(aes(x = Exit, y = Patient, shape = as.factor(Event)), size = 5) +
  scale_shape_manual(values = c(1, 4), labels = c("删失", "事件(死亡)")) +
  geom_vline(xintercept = c(accrual_start, followup_end), linetype = "dashed", color = "red") +
  scale_x_date(
    limits = c(as.Date("1983-01-01"), as.Date("1993-12-31")), # 设置x轴范围
    breaks = as.Date(c("1983-01-01", "1987-01-01", "1991-01-01", "1992-12-31")), # 指定显示的刻度
    date_labels = "%Y-%m" # 设置时间格式为 年-月
  ) +
  labs(x = "入组日期 – 行政删失日期", y = "", shape = "结果") +
  theme_minimal() +
  theme(
    text = element_text(family = "SimHei", size = 20), # 全局字体大小
    axis.text = element_text(size = 20),              # 坐标轴刻度字体大小
    axis.title = element_text(size = 20),             # 坐标轴标题字体大小
    legend.text = element_text(size = 20),            # 图例文字字体大小
    legend.title = element_text(size = 20),           # 图例标题字体大小
    axis.text.y = element_text(size = 20),            # Y轴刻度字体大小
    legend.position = "top"
  )
```




```{r}
nhefs$survtime <- ifelse(nhefs$death==0, 120, 
                         (nhefs$yrdth-83)*12+nhefs$modth) # yrdth ranges from 83 to 92

table(nhefs$death, nhefs$qsmk)
summary(nhefs[which(nhefs$death==1),]$survtime)

survdiff(Surv(survtime, death) ~ qsmk, data=nhefs)

fit <- survfit(Surv(survtime, death) ~ qsmk, data=nhefs)
ggsurvplot(fit, data = nhefs, xlab="跟踪月份",
           ylab="生存概率",
           main="Product-Limit Survival Estimates", risk.table = TRUE)
```

```{r}
library(survRM2)
q <- survRM2::rmst2(
  time = nhefs1$time,
  status = nhefs$death,
  arm = nhefs$qsmk,
  tau = 120,
  alpha = 0.05
)

q$RMST.arm0
```


```{r}
# 加载必要的包
library(ggplot2)
library(tidyr)
library(dplyr)

# 模拟数据
data <- data.frame(
  Month = factor(month.abb, levels = month.abb),
  IceCreamSales = c(20, 30, 50, 65, 85, 110, 120, 115, 100, 80, 50, 30),
  SharkAttacks = c(18, 28, 52, 66, 88, 112, 115, 110, 95, 78, 48, 25)
)

# 将数据转换为长格式
long_data <- pivot_longer(data, cols = c("IceCreamSales", "SharkAttacks"),
                          names_to = "Variable", values_to = "Value")

# 绘图
ggplot(long_data, aes(x = Month, y = Value, color = Variable, group = Variable)) +
  geom_line(size = 1.2) +
  scale_color_manual(values = c("IceCreamSales" = "blue", "SharkAttacks" = "red")) +
  labs(title = "Ice Cream Sales vs. Shark Attacks",
       x = NULL,
       y = NULL,
       color = NULL) +
  theme_minimal(base_size = 14) +
  theme(legend.position = "bottom")

```


```{r}
# 加载必要的包
library(ggplot2)
library(tidyr)
library(dplyr)

# 中文月份
月份 <- factor(c("一月", "二月", "三月", "四月", "五月", "六月", 
                "七月", "八月", "九月", "十月", "十一月", "十二月"),
              levels = c("一月", "二月", "三月", "四月", "五月", "六月", 
                         "七月", "八月", "九月", "十月", "十一月", "十二月"))

# 模拟数据
data <- data.frame(
  月份 = 月份,
  冰淇淋销售量 = c(20, 30, 50, 65, 85, 110, 120, 115, 100, 80, 50, 30),
  鲨鱼袭击次数 = c(18, 28, 52, 66, 88, 112, 115, 110, 95, 78, 48, 25)
)

# 转换成长格式数据
long_data <- pivot_longer(data, cols = c("冰淇淋销售量", "鲨鱼袭击次数"),
                          names_to = "变量", values_to = "值")

# 中文绘图
ggplot(long_data, aes(x = 月份, y = 值, color = 变量, group = 变量)) +
  geom_line(size = 1.2) +
  scale_color_manual(values = c("冰淇淋销售量" = "blue", "鲨鱼袭击次数" = "red")) +
  labs(title = "冰淇淋销售量与鲨鱼袭击次数的时间序列图",
       x = NULL,
       y = NULL,
       color = NULL) +
  theme_minimal(base_size = 14) +
  theme(legend.position = "bottom")

```


```{r}
data(gbsg)
gbsg <- gbsg %>%
  mutate(across(c(meno, status), as.factor))
gbsg$status <- ifelse(gbsg$status==1,'否','是' )
gbsg |> ggplot( aes(x = time, color=status,fill = status)) +
  geom_histogram(position = "identity", bins = 30, alpha = 0.8) +
  geom_vline(aes(xintercept = 800), color = "red", linetype = "solid", size = 1)  +
  labs(
    x = "生存时间(天)",
    y = "频数",
    fill = "删失与否"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    legend.position = "right"
  )
```


```{r}
library(grf)
data(gbsg)
X <- as.matrix(gbsg |> select(age,meno,size,grade,nodes,pgr,er))
Y <- gbsg$time
W <- gbsg$treat
D <- gbsg$status
csf <- causal_survival_forest(X, Y, W, D, W.hat = 0.5, target = "RMST", horizon = 800)

average_treatment_effect(csf)
```

```{r}
best_linear_projection(csf, X)
```

```{r}
rate <- rank_average_treatment_effect(csf, X[, "age"])
plot(rate, ylab = "CATE，天数", xlab = "年龄")
```

```{r}
library(gtsummary)
gbsg
gbsg <- gbsg %>%
  mutate(across(c(meno, status), as.factor))
table <-
  tbl_summary(
    gbsg,
    include = -pid,
    by = treat, # split table by group
    missing = "no" # don't list missing data separately
  ) |> 
  add_n() |> # add column with total number of non-missing observations
  add_p() |> # test for a difference between groups
  modify_header(label = "**Variable**") |> # update the column header
  bold_labels()
```


```{r}
as_gt(table) %>% gt::as_latex() |> as.character()
```


